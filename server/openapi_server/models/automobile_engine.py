# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AutomobileEngine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, head_alloy=None, piston_stroke=None, note=None, configuration=None, cooling_system=None, fuel_system=None, oil_system=None, description=None, start_year_of_insertion=None, type=None, fuel_consumption=None, automobile_model=None, acceleration=None, diameter=None, redline=None, displacement=None, id=None, height=None, length=None, weight=None, label=None, end_year_of_insertion=None, torque_output=None, power_output=None, valvetrain=None, compression_ratio=None, top_speed=None, fuel_type=None, width=None, block_alloy=None, co2_emission=None, cylinder_bore=None):  # noqa: E501
        """AutomobileEngine - a model defined in OpenAPI

        :param head_alloy: The head_alloy of this AutomobileEngine.  # noqa: E501
        :type head_alloy: List[object]
        :param piston_stroke: The piston_stroke of this AutomobileEngine.  # noqa: E501
        :type piston_stroke: List[object]
        :param note: The note of this AutomobileEngine.  # noqa: E501
        :type note: List[str]
        :param configuration: The configuration of this AutomobileEngine.  # noqa: E501
        :type configuration: List[object]
        :param cooling_system: The cooling_system of this AutomobileEngine.  # noqa: E501
        :type cooling_system: List[object]
        :param fuel_system: The fuel_system of this AutomobileEngine.  # noqa: E501
        :type fuel_system: List[object]
        :param oil_system: The oil_system of this AutomobileEngine.  # noqa: E501
        :type oil_system: List[object]
        :param description: The description of this AutomobileEngine.  # noqa: E501
        :type description: List[str]
        :param start_year_of_insertion: The start_year_of_insertion of this AutomobileEngine.  # noqa: E501
        :type start_year_of_insertion: List[str]
        :param type: The type of this AutomobileEngine.  # noqa: E501
        :type type: List[str]
        :param fuel_consumption: The fuel_consumption of this AutomobileEngine.  # noqa: E501
        :type fuel_consumption: List[str]
        :param automobile_model: The automobile_model of this AutomobileEngine.  # noqa: E501
        :type automobile_model: List[str]
        :param acceleration: The acceleration of this AutomobileEngine.  # noqa: E501
        :type acceleration: List[object]
        :param diameter: The diameter of this AutomobileEngine.  # noqa: E501
        :type diameter: List[object]
        :param redline: The redline of this AutomobileEngine.  # noqa: E501
        :type redline: List[float]
        :param displacement: The displacement of this AutomobileEngine.  # noqa: E501
        :type displacement: List[object]
        :param id: The id of this AutomobileEngine.  # noqa: E501
        :type id: str
        :param height: The height of this AutomobileEngine.  # noqa: E501
        :type height: List[object]
        :param length: The length of this AutomobileEngine.  # noqa: E501
        :type length: List[object]
        :param weight: The weight of this AutomobileEngine.  # noqa: E501
        :type weight: List[object]
        :param label: The label of this AutomobileEngine.  # noqa: E501
        :type label: List[str]
        :param end_year_of_insertion: The end_year_of_insertion of this AutomobileEngine.  # noqa: E501
        :type end_year_of_insertion: List[str]
        :param torque_output: The torque_output of this AutomobileEngine.  # noqa: E501
        :type torque_output: List[object]
        :param power_output: The power_output of this AutomobileEngine.  # noqa: E501
        :type power_output: List[object]
        :param valvetrain: The valvetrain of this AutomobileEngine.  # noqa: E501
        :type valvetrain: List[object]
        :param compression_ratio: The compression_ratio of this AutomobileEngine.  # noqa: E501
        :type compression_ratio: List[str]
        :param top_speed: The top_speed of this AutomobileEngine.  # noqa: E501
        :type top_speed: List[object]
        :param fuel_type: The fuel_type of this AutomobileEngine.  # noqa: E501
        :type fuel_type: List[object]
        :param width: The width of this AutomobileEngine.  # noqa: E501
        :type width: List[object]
        :param block_alloy: The block_alloy of this AutomobileEngine.  # noqa: E501
        :type block_alloy: List[object]
        :param co2_emission: The co2_emission of this AutomobileEngine.  # noqa: E501
        :type co2_emission: List[object]
        :param cylinder_bore: The cylinder_bore of this AutomobileEngine.  # noqa: E501
        :type cylinder_bore: List[object]
        """


        self.openapi_types = {
            'head_alloy': List[object],
            'piston_stroke': List[object],
            'note': List[str],
            'configuration': List[object],
            'cooling_system': List[object],
            'fuel_system': List[object],
            'oil_system': List[object],
            'description': List[str],
            'start_year_of_insertion': List[str],
            'type': List[str],
            'fuel_consumption': List[str],
            'automobile_model': List[str],
            'acceleration': List[object],
            'diameter': List[object],
            'redline': List[float],
            'displacement': List[object],
            'id': str,
            'height': List[object],
            'length': List[object],
            'weight': List[object],
            'label': List[str],
            'end_year_of_insertion': List[str],
            'torque_output': List[object],
            'power_output': List[object],
            'valvetrain': List[object],
            'compression_ratio': List[str],
            'top_speed': List[object],
            'fuel_type': List[object],
            'width': List[object],
            'block_alloy': List[object],
            'co2_emission': List[object],
            'cylinder_bore': List[object]
        }

        self.attribute_map = {
            'head_alloy': 'headAlloy',
            'piston_stroke': 'pistonStroke',
            'note': 'note',
            'configuration': 'configuration',
            'cooling_system': 'coolingSystem',
            'fuel_system': 'fuelSystem',
            'oil_system': 'oilSystem',
            'description': 'description',
            'start_year_of_insertion': 'startYearOfInsertion',
            'type': 'type',
            'fuel_consumption': 'fuelConsumption',
            'automobile_model': 'automobileModel',
            'acceleration': 'acceleration',
            'diameter': 'diameter',
            'redline': 'redline',
            'displacement': 'displacement',
            'id': 'id',
            'height': 'height',
            'length': 'length',
            'weight': 'weight',
            'label': 'label',
            'end_year_of_insertion': 'endYearOfInsertion',
            'torque_output': 'torqueOutput',
            'power_output': 'powerOutput',
            'valvetrain': 'valvetrain',
            'compression_ratio': 'compressionRatio',
            'top_speed': 'topSpeed',
            'fuel_type': 'fuelType',
            'width': 'width',
            'block_alloy': 'blockAlloy',
            'co2_emission': 'co2Emission',
            'cylinder_bore': 'cylinderBore'
        }

        self._head_alloy = head_alloy
        self._piston_stroke = piston_stroke
        self._note = note
        self._configuration = configuration
        self._cooling_system = cooling_system
        self._fuel_system = fuel_system
        self._oil_system = oil_system
        self._description = description
        self._start_year_of_insertion = start_year_of_insertion
        self._type = type
        self._fuel_consumption = fuel_consumption
        self._automobile_model = automobile_model
        self._acceleration = acceleration
        self._diameter = diameter
        self._redline = redline
        self._displacement = displacement
        self._id = id
        self._height = height
        self._length = length
        self._weight = weight
        self._label = label
        self._end_year_of_insertion = end_year_of_insertion
        self._torque_output = torque_output
        self._power_output = power_output
        self._valvetrain = valvetrain
        self._compression_ratio = compression_ratio
        self._top_speed = top_speed
        self._fuel_type = fuel_type
        self._width = width
        self._block_alloy = block_alloy
        self._co2_emission = co2_emission
        self._cylinder_bore = cylinder_bore

    @classmethod
    def from_dict(cls, dikt) -> 'AutomobileEngine':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AutomobileEngine of this AutomobileEngine.  # noqa: E501
        :rtype: AutomobileEngine
        """
        return util.deserialize_model(dikt, cls)

    @property
    def head_alloy(self):
        """Gets the head_alloy of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The head_alloy of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._head_alloy

    @head_alloy.setter
    def head_alloy(self, head_alloy):
        """Sets the head_alloy of this AutomobileEngine.

        Description not available  # noqa: E501

        :param head_alloy: The head_alloy of this AutomobileEngine.
        :type head_alloy: List[object]
        """

        self._head_alloy = head_alloy

    @property
    def piston_stroke(self):
        """Gets the piston_stroke of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The piston_stroke of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._piston_stroke

    @piston_stroke.setter
    def piston_stroke(self, piston_stroke):
        """Sets the piston_stroke of this AutomobileEngine.

        Description not available  # noqa: E501

        :param piston_stroke: The piston_stroke of this AutomobileEngine.
        :type piston_stroke: List[object]
        """

        self._piston_stroke = piston_stroke

    @property
    def note(self):
        """Gets the note of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The note of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this AutomobileEngine.

        Description not available  # noqa: E501

        :param note: The note of this AutomobileEngine.
        :type note: List[str]
        """

        self._note = note

    @property
    def configuration(self):
        """Gets the configuration of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The configuration of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this AutomobileEngine.

        Description not available  # noqa: E501

        :param configuration: The configuration of this AutomobileEngine.
        :type configuration: List[object]
        """

        self._configuration = configuration

    @property
    def cooling_system(self):
        """Gets the cooling_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The cooling_system of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._cooling_system

    @cooling_system.setter
    def cooling_system(self, cooling_system):
        """Sets the cooling_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :param cooling_system: The cooling_system of this AutomobileEngine.
        :type cooling_system: List[object]
        """

        self._cooling_system = cooling_system

    @property
    def fuel_system(self):
        """Gets the fuel_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The fuel_system of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._fuel_system

    @fuel_system.setter
    def fuel_system(self, fuel_system):
        """Sets the fuel_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :param fuel_system: The fuel_system of this AutomobileEngine.
        :type fuel_system: List[object]
        """

        self._fuel_system = fuel_system

    @property
    def oil_system(self):
        """Gets the oil_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The oil_system of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._oil_system

    @oil_system.setter
    def oil_system(self, oil_system):
        """Sets the oil_system of this AutomobileEngine.

        Description not available  # noqa: E501

        :param oil_system: The oil_system of this AutomobileEngine.
        :type oil_system: List[object]
        """

        self._oil_system = oil_system

    @property
    def description(self):
        """Gets the description of this AutomobileEngine.

        small description  # noqa: E501

        :return: The description of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AutomobileEngine.

        small description  # noqa: E501

        :param description: The description of this AutomobileEngine.
        :type description: List[str]
        """

        self._description = description

    @property
    def start_year_of_insertion(self):
        """Gets the start_year_of_insertion of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The start_year_of_insertion of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._start_year_of_insertion

    @start_year_of_insertion.setter
    def start_year_of_insertion(self, start_year_of_insertion):
        """Sets the start_year_of_insertion of this AutomobileEngine.

        Description not available  # noqa: E501

        :param start_year_of_insertion: The start_year_of_insertion of this AutomobileEngine.
        :type start_year_of_insertion: List[str]
        """

        self._start_year_of_insertion = start_year_of_insertion

    @property
    def type(self):
        """Gets the type of this AutomobileEngine.

        type of the resource  # noqa: E501

        :return: The type of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AutomobileEngine.

        type of the resource  # noqa: E501

        :param type: The type of this AutomobileEngine.
        :type type: List[str]
        """

        self._type = type

    @property
    def fuel_consumption(self):
        """Gets the fuel_consumption of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The fuel_consumption of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._fuel_consumption

    @fuel_consumption.setter
    def fuel_consumption(self, fuel_consumption):
        """Sets the fuel_consumption of this AutomobileEngine.

        Description not available  # noqa: E501

        :param fuel_consumption: The fuel_consumption of this AutomobileEngine.
        :type fuel_consumption: List[str]
        """

        self._fuel_consumption = fuel_consumption

    @property
    def automobile_model(self):
        """Gets the automobile_model of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The automobile_model of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._automobile_model

    @automobile_model.setter
    def automobile_model(self, automobile_model):
        """Sets the automobile_model of this AutomobileEngine.

        Description not available  # noqa: E501

        :param automobile_model: The automobile_model of this AutomobileEngine.
        :type automobile_model: List[str]
        """

        self._automobile_model = automobile_model

    @property
    def acceleration(self):
        """Gets the acceleration of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The acceleration of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._acceleration

    @acceleration.setter
    def acceleration(self, acceleration):
        """Sets the acceleration of this AutomobileEngine.

        Description not available  # noqa: E501

        :param acceleration: The acceleration of this AutomobileEngine.
        :type acceleration: List[object]
        """

        self._acceleration = acceleration

    @property
    def diameter(self):
        """Gets the diameter of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The diameter of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._diameter

    @diameter.setter
    def diameter(self, diameter):
        """Sets the diameter of this AutomobileEngine.

        Description not available  # noqa: E501

        :param diameter: The diameter of this AutomobileEngine.
        :type diameter: List[object]
        """

        self._diameter = diameter

    @property
    def redline(self):
        """Gets the redline of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The redline of this AutomobileEngine.
        :rtype: List[float]
        """
        return self._redline

    @redline.setter
    def redline(self, redline):
        """Sets the redline of this AutomobileEngine.

        Description not available  # noqa: E501

        :param redline: The redline of this AutomobileEngine.
        :type redline: List[float]
        """

        self._redline = redline

    @property
    def displacement(self):
        """Gets the displacement of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The displacement of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._displacement

    @displacement.setter
    def displacement(self, displacement):
        """Sets the displacement of this AutomobileEngine.

        Description not available  # noqa: E501

        :param displacement: The displacement of this AutomobileEngine.
        :type displacement: List[object]
        """

        self._displacement = displacement

    @property
    def id(self):
        """Gets the id of this AutomobileEngine.

        identifier  # noqa: E501

        :return: The id of this AutomobileEngine.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AutomobileEngine.

        identifier  # noqa: E501

        :param id: The id of this AutomobileEngine.
        :type id: str
        """

        self._id = id

    @property
    def height(self):
        """Gets the height of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The height of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this AutomobileEngine.

        Description not available  # noqa: E501

        :param height: The height of this AutomobileEngine.
        :type height: List[object]
        """

        self._height = height

    @property
    def length(self):
        """Gets the length of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The length of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this AutomobileEngine.

        Description not available  # noqa: E501

        :param length: The length of this AutomobileEngine.
        :type length: List[object]
        """

        self._length = length

    @property
    def weight(self):
        """Gets the weight of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The weight of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this AutomobileEngine.

        Description not available  # noqa: E501

        :param weight: The weight of this AutomobileEngine.
        :type weight: List[object]
        """

        self._weight = weight

    @property
    def label(self):
        """Gets the label of this AutomobileEngine.

        short description of the resource  # noqa: E501

        :return: The label of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this AutomobileEngine.

        short description of the resource  # noqa: E501

        :param label: The label of this AutomobileEngine.
        :type label: List[str]
        """

        self._label = label

    @property
    def end_year_of_insertion(self):
        """Gets the end_year_of_insertion of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The end_year_of_insertion of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._end_year_of_insertion

    @end_year_of_insertion.setter
    def end_year_of_insertion(self, end_year_of_insertion):
        """Sets the end_year_of_insertion of this AutomobileEngine.

        Description not available  # noqa: E501

        :param end_year_of_insertion: The end_year_of_insertion of this AutomobileEngine.
        :type end_year_of_insertion: List[str]
        """

        self._end_year_of_insertion = end_year_of_insertion

    @property
    def torque_output(self):
        """Gets the torque_output of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The torque_output of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._torque_output

    @torque_output.setter
    def torque_output(self, torque_output):
        """Sets the torque_output of this AutomobileEngine.

        Description not available  # noqa: E501

        :param torque_output: The torque_output of this AutomobileEngine.
        :type torque_output: List[object]
        """

        self._torque_output = torque_output

    @property
    def power_output(self):
        """Gets the power_output of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The power_output of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._power_output

    @power_output.setter
    def power_output(self, power_output):
        """Sets the power_output of this AutomobileEngine.

        Description not available  # noqa: E501

        :param power_output: The power_output of this AutomobileEngine.
        :type power_output: List[object]
        """

        self._power_output = power_output

    @property
    def valvetrain(self):
        """Gets the valvetrain of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The valvetrain of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._valvetrain

    @valvetrain.setter
    def valvetrain(self, valvetrain):
        """Sets the valvetrain of this AutomobileEngine.

        Description not available  # noqa: E501

        :param valvetrain: The valvetrain of this AutomobileEngine.
        :type valvetrain: List[object]
        """

        self._valvetrain = valvetrain

    @property
    def compression_ratio(self):
        """Gets the compression_ratio of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The compression_ratio of this AutomobileEngine.
        :rtype: List[str]
        """
        return self._compression_ratio

    @compression_ratio.setter
    def compression_ratio(self, compression_ratio):
        """Sets the compression_ratio of this AutomobileEngine.

        Description not available  # noqa: E501

        :param compression_ratio: The compression_ratio of this AutomobileEngine.
        :type compression_ratio: List[str]
        """

        self._compression_ratio = compression_ratio

    @property
    def top_speed(self):
        """Gets the top_speed of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The top_speed of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._top_speed

    @top_speed.setter
    def top_speed(self, top_speed):
        """Sets the top_speed of this AutomobileEngine.

        Description not available  # noqa: E501

        :param top_speed: The top_speed of this AutomobileEngine.
        :type top_speed: List[object]
        """

        self._top_speed = top_speed

    @property
    def fuel_type(self):
        """Gets the fuel_type of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The fuel_type of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._fuel_type

    @fuel_type.setter
    def fuel_type(self, fuel_type):
        """Sets the fuel_type of this AutomobileEngine.

        Description not available  # noqa: E501

        :param fuel_type: The fuel_type of this AutomobileEngine.
        :type fuel_type: List[object]
        """

        self._fuel_type = fuel_type

    @property
    def width(self):
        """Gets the width of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The width of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this AutomobileEngine.

        Description not available  # noqa: E501

        :param width: The width of this AutomobileEngine.
        :type width: List[object]
        """

        self._width = width

    @property
    def block_alloy(self):
        """Gets the block_alloy of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The block_alloy of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._block_alloy

    @block_alloy.setter
    def block_alloy(self, block_alloy):
        """Sets the block_alloy of this AutomobileEngine.

        Description not available  # noqa: E501

        :param block_alloy: The block_alloy of this AutomobileEngine.
        :type block_alloy: List[object]
        """

        self._block_alloy = block_alloy

    @property
    def co2_emission(self):
        """Gets the co2_emission of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The co2_emission of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._co2_emission

    @co2_emission.setter
    def co2_emission(self, co2_emission):
        """Sets the co2_emission of this AutomobileEngine.

        Description not available  # noqa: E501

        :param co2_emission: The co2_emission of this AutomobileEngine.
        :type co2_emission: List[object]
        """

        self._co2_emission = co2_emission

    @property
    def cylinder_bore(self):
        """Gets the cylinder_bore of this AutomobileEngine.

        Description not available  # noqa: E501

        :return: The cylinder_bore of this AutomobileEngine.
        :rtype: List[object]
        """
        return self._cylinder_bore

    @cylinder_bore.setter
    def cylinder_bore(self, cylinder_bore):
        """Sets the cylinder_bore of this AutomobileEngine.

        Description not available  # noqa: E501

        :param cylinder_bore: The cylinder_bore of this AutomobileEngine.
        :type cylinder_bore: List[object]
        """

        self._cylinder_bore = cylinder_bore
