# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class PoliticalFunction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, person_name=None, function_start_date=None, function_start_year=None, function_end_year=None, person=None, description=None, function_end_date=None, id=None, label=None, type=None):  # noqa: E501
        """PoliticalFunction - a model defined in OpenAPI

        :param person_name: The person_name of this PoliticalFunction.  # noqa: E501
        :type person_name: List[str]
        :param function_start_date: The function_start_date of this PoliticalFunction.  # noqa: E501
        :type function_start_date: List[str]
        :param function_start_year: The function_start_year of this PoliticalFunction.  # noqa: E501
        :type function_start_year: List[str]
        :param function_end_year: The function_end_year of this PoliticalFunction.  # noqa: E501
        :type function_end_year: List[str]
        :param person: The person of this PoliticalFunction.  # noqa: E501
        :type person: List[object]
        :param description: The description of this PoliticalFunction.  # noqa: E501
        :type description: List[str]
        :param function_end_date: The function_end_date of this PoliticalFunction.  # noqa: E501
        :type function_end_date: List[str]
        :param id: The id of this PoliticalFunction.  # noqa: E501
        :type id: str
        :param label: The label of this PoliticalFunction.  # noqa: E501
        :type label: List[str]
        :param type: The type of this PoliticalFunction.  # noqa: E501
        :type type: List[str]
        """


        self.openapi_types = {
            'person_name': List[str],
            'function_start_date': List[str],
            'function_start_year': List[str],
            'function_end_year': List[str],
            'person': List[object],
            'description': List[str],
            'function_end_date': List[str],
            'id': str,
            'label': List[str],
            'type': List[str]
        }

        self.attribute_map = {
            'person_name': 'personName',
            'function_start_date': 'functionStartDate',
            'function_start_year': 'functionStartYear',
            'function_end_year': 'functionEndYear',
            'person': 'person',
            'description': 'description',
            'function_end_date': 'functionEndDate',
            'id': 'id',
            'label': 'label',
            'type': 'type'
        }

        self._person_name = person_name
        self._function_start_date = function_start_date
        self._function_start_year = function_start_year
        self._function_end_year = function_end_year
        self._person = person
        self._description = description
        self._function_end_date = function_end_date
        self._id = id
        self._label = label
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'PoliticalFunction':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PoliticalFunction of this PoliticalFunction.  # noqa: E501
        :rtype: PoliticalFunction
        """
        return util.deserialize_model(dikt, cls)

    @property
    def person_name(self):
        """Gets the person_name of this PoliticalFunction.

        Description not available  # noqa: E501

        :return: The person_name of this PoliticalFunction.
        :rtype: List[str]
        """
        return self._person_name

    @person_name.setter
    def person_name(self, person_name):
        """Sets the person_name of this PoliticalFunction.

        Description not available  # noqa: E501

        :param person_name: The person_name of this PoliticalFunction.
        :type person_name: List[str]
        """

        self._person_name = person_name

    @property
    def function_start_date(self):
        """Gets the function_start_date of this PoliticalFunction.

        Description not available  # noqa: E501

        :return: The function_start_date of this PoliticalFunction.
        :rtype: List[str]
        """
        return self._function_start_date

    @function_start_date.setter
    def function_start_date(self, function_start_date):
        """Sets the function_start_date of this PoliticalFunction.

        Description not available  # noqa: E501

        :param function_start_date: The function_start_date of this PoliticalFunction.
        :type function_start_date: List[str]
        """

        self._function_start_date = function_start_date

    @property
    def function_start_year(self):
        """Gets the function_start_year of this PoliticalFunction.

        Description not available  # noqa: E501

        :return: The function_start_year of this PoliticalFunction.
        :rtype: List[str]
        """
        return self._function_start_year

    @function_start_year.setter
    def function_start_year(self, function_start_year):
        """Sets the function_start_year of this PoliticalFunction.

        Description not available  # noqa: E501

        :param function_start_year: The function_start_year of this PoliticalFunction.
        :type function_start_year: List[str]
        """

        self._function_start_year = function_start_year

    @property
    def function_end_year(self):
        """Gets the function_end_year of this PoliticalFunction.

        Description not available  # noqa: E501

        :return: The function_end_year of this PoliticalFunction.
        :rtype: List[str]
        """
        return self._function_end_year

    @function_end_year.setter
    def function_end_year(self, function_end_year):
        """Sets the function_end_year of this PoliticalFunction.

        Description not available  # noqa: E501

        :param function_end_year: The function_end_year of this PoliticalFunction.
        :type function_end_year: List[str]
        """

        self._function_end_year = function_end_year

    @property
    def person(self):
        """Gets the person of this PoliticalFunction.

        Description not available  # noqa: E501

        :return: The person of this PoliticalFunction.
        :rtype: List[object]
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this PoliticalFunction.

        Description not available  # noqa: E501

        :param person: The person of this PoliticalFunction.
        :type person: List[object]
        """

        self._person = person

    @property
    def description(self):
        """Gets the description of this PoliticalFunction.

        small description  # noqa: E501

        :return: The description of this PoliticalFunction.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PoliticalFunction.

        small description  # noqa: E501

        :param description: The description of this PoliticalFunction.
        :type description: List[str]
        """

        self._description = description

    @property
    def function_end_date(self):
        """Gets the function_end_date of this PoliticalFunction.

        Description not available  # noqa: E501

        :return: The function_end_date of this PoliticalFunction.
        :rtype: List[str]
        """
        return self._function_end_date

    @function_end_date.setter
    def function_end_date(self, function_end_date):
        """Sets the function_end_date of this PoliticalFunction.

        Description not available  # noqa: E501

        :param function_end_date: The function_end_date of this PoliticalFunction.
        :type function_end_date: List[str]
        """

        self._function_end_date = function_end_date

    @property
    def id(self):
        """Gets the id of this PoliticalFunction.

        identifier  # noqa: E501

        :return: The id of this PoliticalFunction.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PoliticalFunction.

        identifier  # noqa: E501

        :param id: The id of this PoliticalFunction.
        :type id: str
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this PoliticalFunction.

        short description of the resource  # noqa: E501

        :return: The label of this PoliticalFunction.
        :rtype: List[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this PoliticalFunction.

        short description of the resource  # noqa: E501

        :param label: The label of this PoliticalFunction.
        :type label: List[str]
        """

        self._label = label

    @property
    def type(self):
        """Gets the type of this PoliticalFunction.

        type of the resource  # noqa: E501

        :return: The type of this PoliticalFunction.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PoliticalFunction.

        type of the resource  # noqa: E501

        :param type: The type of this PoliticalFunction.
        :type type: List[str]
        """

        self._type = type
