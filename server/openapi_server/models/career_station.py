# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class CareerStation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_goals=None, description=None, id=None, label=None, type=None, number_of_matches=None):  # noqa: E501
        """CareerStation - a model defined in OpenAPI

        :param number_of_goals: The number_of_goals of this CareerStation.  # noqa: E501
        :type number_of_goals: List[str]
        :param description: The description of this CareerStation.  # noqa: E501
        :type description: List[str]
        :param id: The id of this CareerStation.  # noqa: E501
        :type id: str
        :param label: The label of this CareerStation.  # noqa: E501
        :type label: List[str]
        :param type: The type of this CareerStation.  # noqa: E501
        :type type: List[str]
        :param number_of_matches: The number_of_matches of this CareerStation.  # noqa: E501
        :type number_of_matches: List[int]
        """


        self.openapi_types = {
            'number_of_goals': List[str],
            'description': List[str],
            'id': str,
            'label': List[str],
            'type': List[str],
            'number_of_matches': List[int]
        }

        self.attribute_map = {
            'number_of_goals': 'numberOfGoals',
            'description': 'description',
            'id': 'id',
            'label': 'label',
            'type': 'type',
            'number_of_matches': 'numberOfMatches'
        }

        self._number_of_goals = number_of_goals
        self._description = description
        self._id = id
        self._label = label
        self._type = type
        self._number_of_matches = number_of_matches

    @classmethod
    def from_dict(cls, dikt) -> 'CareerStation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CareerStation of this CareerStation.  # noqa: E501
        :rtype: CareerStation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_goals(self):
        """Gets the number_of_goals of this CareerStation.

        Description not available  # noqa: E501

        :return: The number_of_goals of this CareerStation.
        :rtype: List[str]
        """
        return self._number_of_goals

    @number_of_goals.setter
    def number_of_goals(self, number_of_goals):
        """Sets the number_of_goals of this CareerStation.

        Description not available  # noqa: E501

        :param number_of_goals: The number_of_goals of this CareerStation.
        :type number_of_goals: List[str]
        """

        self._number_of_goals = number_of_goals

    @property
    def description(self):
        """Gets the description of this CareerStation.

        small description  # noqa: E501

        :return: The description of this CareerStation.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CareerStation.

        small description  # noqa: E501

        :param description: The description of this CareerStation.
        :type description: List[str]
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this CareerStation.

        identifier  # noqa: E501

        :return: The id of this CareerStation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CareerStation.

        identifier  # noqa: E501

        :param id: The id of this CareerStation.
        :type id: str
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this CareerStation.

        short description of the resource  # noqa: E501

        :return: The label of this CareerStation.
        :rtype: List[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this CareerStation.

        short description of the resource  # noqa: E501

        :param label: The label of this CareerStation.
        :type label: List[str]
        """

        self._label = label

    @property
    def type(self):
        """Gets the type of this CareerStation.

        type of the resource  # noqa: E501

        :return: The type of this CareerStation.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CareerStation.

        type of the resource  # noqa: E501

        :param type: The type of this CareerStation.
        :type type: List[str]
        """

        self._type = type

    @property
    def number_of_matches(self):
        """Gets the number_of_matches of this CareerStation.

        Description not available  # noqa: E501

        :return: The number_of_matches of this CareerStation.
        :rtype: List[int]
        """
        return self._number_of_matches

    @number_of_matches.setter
    def number_of_matches(self, number_of_matches):
        """Sets the number_of_matches of this CareerStation.

        Description not available  # noqa: E501

        :param number_of_matches: The number_of_matches of this CareerStation.
        :type number_of_matches: List[int]
        """

        self._number_of_matches = number_of_matches
