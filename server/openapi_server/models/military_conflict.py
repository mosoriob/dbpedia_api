# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class MilitaryConflict(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, strength=None, number_of_people_attending=None, end_date=None, opponents=None, description=None, caused_by=None, label=None, type=None, casualties=None, participant=None, result=None, duration=None, previous_event=None, causalties=None, is_part_of_military_conflict=None, next_event=None, combatant=None, id=None, following_event=None, place=None, start_date=None):  # noqa: E501
        """MilitaryConflict - a model defined in OpenAPI

        :param strength: The strength of this MilitaryConflict.  # noqa: E501
        :type strength: List[str]
        :param number_of_people_attending: The number_of_people_attending of this MilitaryConflict.  # noqa: E501
        :type number_of_people_attending: List[int]
        :param end_date: The end_date of this MilitaryConflict.  # noqa: E501
        :type end_date: List[str]
        :param opponents: The opponents of this MilitaryConflict.  # noqa: E501
        :type opponents: List[object]
        :param description: The description of this MilitaryConflict.  # noqa: E501
        :type description: List[str]
        :param caused_by: The caused_by of this MilitaryConflict.  # noqa: E501
        :type caused_by: List[object]
        :param label: The label of this MilitaryConflict.  # noqa: E501
        :type label: List[str]
        :param type: The type of this MilitaryConflict.  # noqa: E501
        :type type: List[str]
        :param casualties: The casualties of this MilitaryConflict.  # noqa: E501
        :type casualties: List[int]
        :param participant: The participant of this MilitaryConflict.  # noqa: E501
        :type participant: List[str]
        :param result: The result of this MilitaryConflict.  # noqa: E501
        :type result: List[str]
        :param duration: The duration of this MilitaryConflict.  # noqa: E501
        :type duration: List[float]
        :param previous_event: The previous_event of this MilitaryConflict.  # noqa: E501
        :type previous_event: List[object]
        :param causalties: The causalties of this MilitaryConflict.  # noqa: E501
        :type causalties: List[str]
        :param is_part_of_military_conflict: The is_part_of_military_conflict of this MilitaryConflict.  # noqa: E501
        :type is_part_of_military_conflict: List[object]
        :param next_event: The next_event of this MilitaryConflict.  # noqa: E501
        :type next_event: List[object]
        :param combatant: The combatant of this MilitaryConflict.  # noqa: E501
        :type combatant: List[str]
        :param id: The id of this MilitaryConflict.  # noqa: E501
        :type id: str
        :param following_event: The following_event of this MilitaryConflict.  # noqa: E501
        :type following_event: List[object]
        :param place: The place of this MilitaryConflict.  # noqa: E501
        :type place: List[object]
        :param start_date: The start_date of this MilitaryConflict.  # noqa: E501
        :type start_date: List[str]
        """


        self.openapi_types = {
            'strength': List[str],
            'number_of_people_attending': List[int],
            'end_date': List[str],
            'opponents': List[object],
            'description': List[str],
            'caused_by': List[object],
            'label': List[str],
            'type': List[str],
            'casualties': List[int],
            'participant': List[str],
            'result': List[str],
            'duration': List[float],
            'previous_event': List[object],
            'causalties': List[str],
            'is_part_of_military_conflict': List[object],
            'next_event': List[object],
            'combatant': List[str],
            'id': str,
            'following_event': List[object],
            'place': List[object],
            'start_date': List[str]
        }

        self.attribute_map = {
            'strength': 'strength',
            'number_of_people_attending': 'numberOfPeopleAttending',
            'end_date': 'endDate',
            'opponents': 'opponents',
            'description': 'description',
            'caused_by': 'causedBy',
            'label': 'label',
            'type': 'type',
            'casualties': 'casualties',
            'participant': 'participant',
            'result': 'result',
            'duration': 'duration',
            'previous_event': 'previousEvent',
            'causalties': 'causalties',
            'is_part_of_military_conflict': 'isPartOfMilitaryConflict',
            'next_event': 'nextEvent',
            'combatant': 'combatant',
            'id': 'id',
            'following_event': 'followingEvent',
            'place': 'place',
            'start_date': 'startDate'
        }

        self._strength = strength
        self._number_of_people_attending = number_of_people_attending
        self._end_date = end_date
        self._opponents = opponents
        self._description = description
        self._caused_by = caused_by
        self._label = label
        self._type = type
        self._casualties = casualties
        self._participant = participant
        self._result = result
        self._duration = duration
        self._previous_event = previous_event
        self._causalties = causalties
        self._is_part_of_military_conflict = is_part_of_military_conflict
        self._next_event = next_event
        self._combatant = combatant
        self._id = id
        self._following_event = following_event
        self._place = place
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt) -> 'MilitaryConflict':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MilitaryConflict of this MilitaryConflict.  # noqa: E501
        :rtype: MilitaryConflict
        """
        return util.deserialize_model(dikt, cls)

    @property
    def strength(self):
        """Gets the strength of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The strength of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._strength

    @strength.setter
    def strength(self, strength):
        """Sets the strength of this MilitaryConflict.

        Description not available  # noqa: E501

        :param strength: The strength of this MilitaryConflict.
        :type strength: List[str]
        """

        self._strength = strength

    @property
    def number_of_people_attending(self):
        """Gets the number_of_people_attending of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The number_of_people_attending of this MilitaryConflict.
        :rtype: List[int]
        """
        return self._number_of_people_attending

    @number_of_people_attending.setter
    def number_of_people_attending(self, number_of_people_attending):
        """Sets the number_of_people_attending of this MilitaryConflict.

        Description not available  # noqa: E501

        :param number_of_people_attending: The number_of_people_attending of this MilitaryConflict.
        :type number_of_people_attending: List[int]
        """

        self._number_of_people_attending = number_of_people_attending

    @property
    def end_date(self):
        """Gets the end_date of this MilitaryConflict.

        The end date of the event.  # noqa: E501

        :return: The end_date of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this MilitaryConflict.

        The end date of the event.  # noqa: E501

        :param end_date: The end_date of this MilitaryConflict.
        :type end_date: List[str]
        """

        self._end_date = end_date

    @property
    def opponents(self):
        """Gets the opponents of this MilitaryConflict.

        \"opponent in a military conflict, an organisation, country, or group of countries. \"  # noqa: E501

        :return: The opponents of this MilitaryConflict.
        :rtype: List[object]
        """
        return self._opponents

    @opponents.setter
    def opponents(self, opponents):
        """Sets the opponents of this MilitaryConflict.

        \"opponent in a military conflict, an organisation, country, or group of countries. \"  # noqa: E501

        :param opponents: The opponents of this MilitaryConflict.
        :type opponents: List[object]
        """

        self._opponents = opponents

    @property
    def description(self):
        """Gets the description of this MilitaryConflict.

        small description  # noqa: E501

        :return: The description of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MilitaryConflict.

        small description  # noqa: E501

        :param description: The description of this MilitaryConflict.
        :type description: List[str]
        """

        self._description = description

    @property
    def caused_by(self):
        """Gets the caused_by of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The caused_by of this MilitaryConflict.
        :rtype: List[object]
        """
        return self._caused_by

    @caused_by.setter
    def caused_by(self, caused_by):
        """Sets the caused_by of this MilitaryConflict.

        Description not available  # noqa: E501

        :param caused_by: The caused_by of this MilitaryConflict.
        :type caused_by: List[object]
        """

        self._caused_by = caused_by

    @property
    def label(self):
        """Gets the label of this MilitaryConflict.

        short description of the resource  # noqa: E501

        :return: The label of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this MilitaryConflict.

        short description of the resource  # noqa: E501

        :param label: The label of this MilitaryConflict.
        :type label: List[str]
        """

        self._label = label

    @property
    def type(self):
        """Gets the type of this MilitaryConflict.

        type of the resource  # noqa: E501

        :return: The type of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MilitaryConflict.

        type of the resource  # noqa: E501

        :param type: The type of this MilitaryConflict.
        :type type: List[str]
        """

        self._type = type

    @property
    def casualties(self):
        """Gets the casualties of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The casualties of this MilitaryConflict.
        :rtype: List[int]
        """
        return self._casualties

    @casualties.setter
    def casualties(self, casualties):
        """Sets the casualties of this MilitaryConflict.

        Description not available  # noqa: E501

        :param casualties: The casualties of this MilitaryConflict.
        :type casualties: List[int]
        """

        self._casualties = casualties

    @property
    def participant(self):
        """Gets the participant of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The participant of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._participant

    @participant.setter
    def participant(self, participant):
        """Sets the participant of this MilitaryConflict.

        Description not available  # noqa: E501

        :param participant: The participant of this MilitaryConflict.
        :type participant: List[str]
        """

        self._participant = participant

    @property
    def result(self):
        """Gets the result of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The result of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this MilitaryConflict.

        Description not available  # noqa: E501

        :param result: The result of this MilitaryConflict.
        :type result: List[str]
        """

        self._result = result

    @property
    def duration(self):
        """Gets the duration of this MilitaryConflict.

        The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format  # noqa: E501

        :return: The duration of this MilitaryConflict.
        :rtype: List[float]
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this MilitaryConflict.

        The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format  # noqa: E501

        :param duration: The duration of this MilitaryConflict.
        :type duration: List[float]
        """

        self._duration = duration

    @property
    def previous_event(self):
        """Gets the previous_event of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The previous_event of this MilitaryConflict.
        :rtype: List[object]
        """
        return self._previous_event

    @previous_event.setter
    def previous_event(self, previous_event):
        """Sets the previous_event of this MilitaryConflict.

        Description not available  # noqa: E501

        :param previous_event: The previous_event of this MilitaryConflict.
        :type previous_event: List[object]
        """

        self._previous_event = previous_event

    @property
    def causalties(self):
        """Gets the causalties of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The causalties of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._causalties

    @causalties.setter
    def causalties(self, causalties):
        """Sets the causalties of this MilitaryConflict.

        Description not available  # noqa: E501

        :param causalties: The causalties of this MilitaryConflict.
        :type causalties: List[str]
        """

        self._causalties = causalties

    @property
    def is_part_of_military_conflict(self):
        """Gets the is_part_of_military_conflict of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The is_part_of_military_conflict of this MilitaryConflict.
        :rtype: List[object]
        """
        return self._is_part_of_military_conflict

    @is_part_of_military_conflict.setter
    def is_part_of_military_conflict(self, is_part_of_military_conflict):
        """Sets the is_part_of_military_conflict of this MilitaryConflict.

        Description not available  # noqa: E501

        :param is_part_of_military_conflict: The is_part_of_military_conflict of this MilitaryConflict.
        :type is_part_of_military_conflict: List[object]
        """

        self._is_part_of_military_conflict = is_part_of_military_conflict

    @property
    def next_event(self):
        """Gets the next_event of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The next_event of this MilitaryConflict.
        :rtype: List[object]
        """
        return self._next_event

    @next_event.setter
    def next_event(self, next_event):
        """Sets the next_event of this MilitaryConflict.

        Description not available  # noqa: E501

        :param next_event: The next_event of this MilitaryConflict.
        :type next_event: List[object]
        """

        self._next_event = next_event

    @property
    def combatant(self):
        """Gets the combatant of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The combatant of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._combatant

    @combatant.setter
    def combatant(self, combatant):
        """Sets the combatant of this MilitaryConflict.

        Description not available  # noqa: E501

        :param combatant: The combatant of this MilitaryConflict.
        :type combatant: List[str]
        """

        self._combatant = combatant

    @property
    def id(self):
        """Gets the id of this MilitaryConflict.

        identifier  # noqa: E501

        :return: The id of this MilitaryConflict.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MilitaryConflict.

        identifier  # noqa: E501

        :param id: The id of this MilitaryConflict.
        :type id: str
        """

        self._id = id

    @property
    def following_event(self):
        """Gets the following_event of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The following_event of this MilitaryConflict.
        :rtype: List[object]
        """
        return self._following_event

    @following_event.setter
    def following_event(self, following_event):
        """Sets the following_event of this MilitaryConflict.

        Description not available  # noqa: E501

        :param following_event: The following_event of this MilitaryConflict.
        :type following_event: List[object]
        """

        self._following_event = following_event

    @property
    def place(self):
        """Gets the place of this MilitaryConflict.

        Description not available  # noqa: E501

        :return: The place of this MilitaryConflict.
        :rtype: List[object]
        """
        return self._place

    @place.setter
    def place(self, place):
        """Sets the place of this MilitaryConflict.

        Description not available  # noqa: E501

        :param place: The place of this MilitaryConflict.
        :type place: List[object]
        """

        self._place = place

    @property
    def start_date(self):
        """Gets the start_date of this MilitaryConflict.

        The start date of the event.  # noqa: E501

        :return: The start_date of this MilitaryConflict.
        :rtype: List[str]
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this MilitaryConflict.

        The start date of the event.  # noqa: E501

        :param start_date: The start_date of this MilitaryConflict.
        :type start_date: List[str]
        """

        self._start_date = start_date
