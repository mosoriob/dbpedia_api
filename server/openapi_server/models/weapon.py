# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Weapon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, diameter=None, width=None, length=None, description=None, weight=None, used_in_war=None, id=None, label=None, type=None, height=None):  # noqa: E501
        """Weapon - a model defined in OpenAPI

        :param diameter: The diameter of this Weapon.  # noqa: E501
        :type diameter: List[object]
        :param width: The width of this Weapon.  # noqa: E501
        :type width: List[object]
        :param length: The length of this Weapon.  # noqa: E501
        :type length: List[object]
        :param description: The description of this Weapon.  # noqa: E501
        :type description: List[str]
        :param weight: The weight of this Weapon.  # noqa: E501
        :type weight: List[object]
        :param used_in_war: The used_in_war of this Weapon.  # noqa: E501
        :type used_in_war: List[object]
        :param id: The id of this Weapon.  # noqa: E501
        :type id: str
        :param label: The label of this Weapon.  # noqa: E501
        :type label: List[str]
        :param type: The type of this Weapon.  # noqa: E501
        :type type: List[str]
        :param height: The height of this Weapon.  # noqa: E501
        :type height: List[object]
        """


        self.openapi_types = {
            'diameter': List[object],
            'width': List[object],
            'length': List[object],
            'description': List[str],
            'weight': List[object],
            'used_in_war': List[object],
            'id': str,
            'label': List[str],
            'type': List[str],
            'height': List[object]
        }

        self.attribute_map = {
            'diameter': 'diameter',
            'width': 'width',
            'length': 'length',
            'description': 'description',
            'weight': 'weight',
            'used_in_war': 'usedInWar',
            'id': 'id',
            'label': 'label',
            'type': 'type',
            'height': 'height'
        }

        self._diameter = diameter
        self._width = width
        self._length = length
        self._description = description
        self._weight = weight
        self._used_in_war = used_in_war
        self._id = id
        self._label = label
        self._type = type
        self._height = height

    @classmethod
    def from_dict(cls, dikt) -> 'Weapon':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Weapon of this Weapon.  # noqa: E501
        :rtype: Weapon
        """
        return util.deserialize_model(dikt, cls)

    @property
    def diameter(self):
        """Gets the diameter of this Weapon.

        Description not available  # noqa: E501

        :return: The diameter of this Weapon.
        :rtype: List[object]
        """
        return self._diameter

    @diameter.setter
    def diameter(self, diameter):
        """Sets the diameter of this Weapon.

        Description not available  # noqa: E501

        :param diameter: The diameter of this Weapon.
        :type diameter: List[object]
        """

        self._diameter = diameter

    @property
    def width(self):
        """Gets the width of this Weapon.

        Description not available  # noqa: E501

        :return: The width of this Weapon.
        :rtype: List[object]
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this Weapon.

        Description not available  # noqa: E501

        :param width: The width of this Weapon.
        :type width: List[object]
        """

        self._width = width

    @property
    def length(self):
        """Gets the length of this Weapon.

        Description not available  # noqa: E501

        :return: The length of this Weapon.
        :rtype: List[object]
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this Weapon.

        Description not available  # noqa: E501

        :param length: The length of this Weapon.
        :type length: List[object]
        """

        self._length = length

    @property
    def description(self):
        """Gets the description of this Weapon.

        small description  # noqa: E501

        :return: The description of this Weapon.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Weapon.

        small description  # noqa: E501

        :param description: The description of this Weapon.
        :type description: List[str]
        """

        self._description = description

    @property
    def weight(self):
        """Gets the weight of this Weapon.

        Description not available  # noqa: E501

        :return: The weight of this Weapon.
        :rtype: List[object]
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this Weapon.

        Description not available  # noqa: E501

        :param weight: The weight of this Weapon.
        :type weight: List[object]
        """

        self._weight = weight

    @property
    def used_in_war(self):
        """Gets the used_in_war of this Weapon.

        wars that were typical for the usage of a weapon  # noqa: E501

        :return: The used_in_war of this Weapon.
        :rtype: List[object]
        """
        return self._used_in_war

    @used_in_war.setter
    def used_in_war(self, used_in_war):
        """Sets the used_in_war of this Weapon.

        wars that were typical for the usage of a weapon  # noqa: E501

        :param used_in_war: The used_in_war of this Weapon.
        :type used_in_war: List[object]
        """

        self._used_in_war = used_in_war

    @property
    def id(self):
        """Gets the id of this Weapon.

        identifier  # noqa: E501

        :return: The id of this Weapon.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Weapon.

        identifier  # noqa: E501

        :param id: The id of this Weapon.
        :type id: str
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this Weapon.

        short description of the resource  # noqa: E501

        :return: The label of this Weapon.
        :rtype: List[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this Weapon.

        short description of the resource  # noqa: E501

        :param label: The label of this Weapon.
        :type label: List[str]
        """

        self._label = label

    @property
    def type(self):
        """Gets the type of this Weapon.

        type of the resource  # noqa: E501

        :return: The type of this Weapon.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Weapon.

        type of the resource  # noqa: E501

        :param type: The type of this Weapon.
        :type type: List[str]
        """

        self._type = type

    @property
    def height(self):
        """Gets the height of this Weapon.

        Description not available  # noqa: E501

        :return: The height of this Weapon.
        :rtype: List[object]
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this Weapon.

        Description not available  # noqa: E501

        :param height: The height of this Weapon.
        :type height: List[object]
        """

        self._height = height
