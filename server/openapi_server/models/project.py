# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Project(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_keyword=None, project_end_date=None, project_start_date=None, project_objective=None, description=None, developer=None, id=None, label=None, type=None):  # noqa: E501
        """Project - a model defined in OpenAPI

        :param project_keyword: The project_keyword of this Project.  # noqa: E501
        :type project_keyword: List[str]
        :param project_end_date: The project_end_date of this Project.  # noqa: E501
        :type project_end_date: List[str]
        :param project_start_date: The project_start_date of this Project.  # noqa: E501
        :type project_start_date: List[str]
        :param project_objective: The project_objective of this Project.  # noqa: E501
        :type project_objective: List[str]
        :param description: The description of this Project.  # noqa: E501
        :type description: List[str]
        :param developer: The developer of this Project.  # noqa: E501
        :type developer: List[object]
        :param id: The id of this Project.  # noqa: E501
        :type id: str
        :param label: The label of this Project.  # noqa: E501
        :type label: List[str]
        :param type: The type of this Project.  # noqa: E501
        :type type: List[str]
        """


        self.openapi_types = {
            'project_keyword': List[str],
            'project_end_date': List[str],
            'project_start_date': List[str],
            'project_objective': List[str],
            'description': List[str],
            'developer': List[object],
            'id': str,
            'label': List[str],
            'type': List[str]
        }

        self.attribute_map = {
            'project_keyword': 'projectKeyword',
            'project_end_date': 'projectEndDate',
            'project_start_date': 'projectStartDate',
            'project_objective': 'projectObjective',
            'description': 'description',
            'developer': 'developer',
            'id': 'id',
            'label': 'label',
            'type': 'type'
        }

        self._project_keyword = project_keyword
        self._project_end_date = project_end_date
        self._project_start_date = project_start_date
        self._project_objective = project_objective
        self._description = description
        self._developer = developer
        self._id = id
        self._label = label
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Project of this Project.  # noqa: E501
        :rtype: Project
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_keyword(self):
        """Gets the project_keyword of this Project.

        A key word of the project.  # noqa: E501

        :return: The project_keyword of this Project.
        :rtype: List[str]
        """
        return self._project_keyword

    @project_keyword.setter
    def project_keyword(self, project_keyword):
        """Sets the project_keyword of this Project.

        A key word of the project.  # noqa: E501

        :param project_keyword: The project_keyword of this Project.
        :type project_keyword: List[str]
        """

        self._project_keyword = project_keyword

    @property
    def project_end_date(self):
        """Gets the project_end_date of this Project.

        The end date of the project.  # noqa: E501

        :return: The project_end_date of this Project.
        :rtype: List[str]
        """
        return self._project_end_date

    @project_end_date.setter
    def project_end_date(self, project_end_date):
        """Sets the project_end_date of this Project.

        The end date of the project.  # noqa: E501

        :param project_end_date: The project_end_date of this Project.
        :type project_end_date: List[str]
        """

        self._project_end_date = project_end_date

    @property
    def project_start_date(self):
        """Gets the project_start_date of this Project.

        The start date of the project.  # noqa: E501

        :return: The project_start_date of this Project.
        :rtype: List[str]
        """
        return self._project_start_date

    @project_start_date.setter
    def project_start_date(self, project_start_date):
        """Sets the project_start_date of this Project.

        The start date of the project.  # noqa: E501

        :param project_start_date: The project_start_date of this Project.
        :type project_start_date: List[str]
        """

        self._project_start_date = project_start_date

    @property
    def project_objective(self):
        """Gets the project_objective of this Project.

        A defined objective of the project.  # noqa: E501

        :return: The project_objective of this Project.
        :rtype: List[str]
        """
        return self._project_objective

    @project_objective.setter
    def project_objective(self, project_objective):
        """Sets the project_objective of this Project.

        A defined objective of the project.  # noqa: E501

        :param project_objective: The project_objective of this Project.
        :type project_objective: List[str]
        """

        self._project_objective = project_objective

    @property
    def description(self):
        """Gets the description of this Project.

        small description  # noqa: E501

        :return: The description of this Project.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Project.

        small description  # noqa: E501

        :param description: The description of this Project.
        :type description: List[str]
        """

        self._description = description

    @property
    def developer(self):
        """Gets the developer of this Project.

        Description not available  # noqa: E501

        :return: The developer of this Project.
        :rtype: List[object]
        """
        return self._developer

    @developer.setter
    def developer(self, developer):
        """Sets the developer of this Project.

        Description not available  # noqa: E501

        :param developer: The developer of this Project.
        :type developer: List[object]
        """

        self._developer = developer

    @property
    def id(self):
        """Gets the id of this Project.

        identifier  # noqa: E501

        :return: The id of this Project.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Project.

        identifier  # noqa: E501

        :param id: The id of this Project.
        :type id: str
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this Project.

        short description of the resource  # noqa: E501

        :return: The label of this Project.
        :rtype: List[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this Project.

        short description of the resource  # noqa: E501

        :param label: The label of this Project.
        :type label: List[str]
        """

        self._label = label

    @property
    def type(self):
        """Gets the type of this Project.

        type of the resource  # noqa: E501

        :return: The type of this Project.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Project.

        type of the resource  # noqa: E501

        :param type: The type of this Project.
        :type type: List[str]
        """

        self._type = type
