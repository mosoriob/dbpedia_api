# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class MouseGene(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entrezgene=None, symbol=None, gene_location=None, description=None, label=None, type=None, ensembl=None, refseqprotein=None, omim=None, refseqmrna=None, hgncid=None, mgiid=None, ec_number=None, orthologous_gene=None, id=None, uniprot=None):  # noqa: E501
        """MouseGene - a model defined in OpenAPI

        :param entrezgene: The entrezgene of this MouseGene.  # noqa: E501
        :type entrezgene: List[str]
        :param symbol: The symbol of this MouseGene.  # noqa: E501
        :type symbol: List[str]
        :param gene_location: The gene_location of this MouseGene.  # noqa: E501
        :type gene_location: List[object]
        :param description: The description of this MouseGene.  # noqa: E501
        :type description: List[str]
        :param label: The label of this MouseGene.  # noqa: E501
        :type label: List[str]
        :param type: The type of this MouseGene.  # noqa: E501
        :type type: List[str]
        :param ensembl: The ensembl of this MouseGene.  # noqa: E501
        :type ensembl: List[str]
        :param refseqprotein: The refseqprotein of this MouseGene.  # noqa: E501
        :type refseqprotein: List[str]
        :param omim: The omim of this MouseGene.  # noqa: E501
        :type omim: List[int]
        :param refseqmrna: The refseqmrna of this MouseGene.  # noqa: E501
        :type refseqmrna: List[str]
        :param hgncid: The hgncid of this MouseGene.  # noqa: E501
        :type hgncid: List[str]
        :param mgiid: The mgiid of this MouseGene.  # noqa: E501
        :type mgiid: List[str]
        :param ec_number: The ec_number of this MouseGene.  # noqa: E501
        :type ec_number: List[str]
        :param orthologous_gene: The orthologous_gene of this MouseGene.  # noqa: E501
        :type orthologous_gene: List[object]
        :param id: The id of this MouseGene.  # noqa: E501
        :type id: str
        :param uniprot: The uniprot of this MouseGene.  # noqa: E501
        :type uniprot: List[str]
        """


        self.openapi_types = {
            'entrezgene': List[str],
            'symbol': List[str],
            'gene_location': List[object],
            'description': List[str],
            'label': List[str],
            'type': List[str],
            'ensembl': List[str],
            'refseqprotein': List[str],
            'omim': List[int],
            'refseqmrna': List[str],
            'hgncid': List[str],
            'mgiid': List[str],
            'ec_number': List[str],
            'orthologous_gene': List[object],
            'id': str,
            'uniprot': List[str]
        }

        self.attribute_map = {
            'entrezgene': 'entrezgene',
            'symbol': 'symbol',
            'gene_location': 'geneLocation',
            'description': 'description',
            'label': 'label',
            'type': 'type',
            'ensembl': 'ensembl',
            'refseqprotein': 'refseqprotein',
            'omim': 'omim',
            'refseqmrna': 'refseqmrna',
            'hgncid': 'hgncid',
            'mgiid': 'mgiid',
            'ec_number': 'ecNumber',
            'orthologous_gene': 'orthologousGene',
            'id': 'id',
            'uniprot': 'uniprot'
        }

        self._entrezgene = entrezgene
        self._symbol = symbol
        self._gene_location = gene_location
        self._description = description
        self._label = label
        self._type = type
        self._ensembl = ensembl
        self._refseqprotein = refseqprotein
        self._omim = omim
        self._refseqmrna = refseqmrna
        self._hgncid = hgncid
        self._mgiid = mgiid
        self._ec_number = ec_number
        self._orthologous_gene = orthologous_gene
        self._id = id
        self._uniprot = uniprot

    @classmethod
    def from_dict(cls, dikt) -> 'MouseGene':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MouseGene of this MouseGene.  # noqa: E501
        :rtype: MouseGene
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entrezgene(self):
        """Gets the entrezgene of this MouseGene.

        Description not available  # noqa: E501

        :return: The entrezgene of this MouseGene.
        :rtype: List[str]
        """
        return self._entrezgene

    @entrezgene.setter
    def entrezgene(self, entrezgene):
        """Sets the entrezgene of this MouseGene.

        Description not available  # noqa: E501

        :param entrezgene: The entrezgene of this MouseGene.
        :type entrezgene: List[str]
        """

        self._entrezgene = entrezgene

    @property
    def symbol(self):
        """Gets the symbol of this MouseGene.

        HUGO Gene Symbol  # noqa: E501

        :return: The symbol of this MouseGene.
        :rtype: List[str]
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this MouseGene.

        HUGO Gene Symbol  # noqa: E501

        :param symbol: The symbol of this MouseGene.
        :type symbol: List[str]
        """

        self._symbol = symbol

    @property
    def gene_location(self):
        """Gets the gene_location of this MouseGene.

        Description not available  # noqa: E501

        :return: The gene_location of this MouseGene.
        :rtype: List[object]
        """
        return self._gene_location

    @gene_location.setter
    def gene_location(self, gene_location):
        """Sets the gene_location of this MouseGene.

        Description not available  # noqa: E501

        :param gene_location: The gene_location of this MouseGene.
        :type gene_location: List[object]
        """

        self._gene_location = gene_location

    @property
    def description(self):
        """Gets the description of this MouseGene.

        small description  # noqa: E501

        :return: The description of this MouseGene.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MouseGene.

        small description  # noqa: E501

        :param description: The description of this MouseGene.
        :type description: List[str]
        """

        self._description = description

    @property
    def label(self):
        """Gets the label of this MouseGene.

        short description of the resource  # noqa: E501

        :return: The label of this MouseGene.
        :rtype: List[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this MouseGene.

        short description of the resource  # noqa: E501

        :param label: The label of this MouseGene.
        :type label: List[str]
        """

        self._label = label

    @property
    def type(self):
        """Gets the type of this MouseGene.

        type of the resource  # noqa: E501

        :return: The type of this MouseGene.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MouseGene.

        type of the resource  # noqa: E501

        :param type: The type of this MouseGene.
        :type type: List[str]
        """

        self._type = type

    @property
    def ensembl(self):
        """Gets the ensembl of this MouseGene.

        Description not available  # noqa: E501

        :return: The ensembl of this MouseGene.
        :rtype: List[str]
        """
        return self._ensembl

    @ensembl.setter
    def ensembl(self, ensembl):
        """Sets the ensembl of this MouseGene.

        Description not available  # noqa: E501

        :param ensembl: The ensembl of this MouseGene.
        :type ensembl: List[str]
        """

        self._ensembl = ensembl

    @property
    def refseqprotein(self):
        """Gets the refseqprotein of this MouseGene.

        Description not available  # noqa: E501

        :return: The refseqprotein of this MouseGene.
        :rtype: List[str]
        """
        return self._refseqprotein

    @refseqprotein.setter
    def refseqprotein(self, refseqprotein):
        """Sets the refseqprotein of this MouseGene.

        Description not available  # noqa: E501

        :param refseqprotein: The refseqprotein of this MouseGene.
        :type refseqprotein: List[str]
        """

        self._refseqprotein = refseqprotein

    @property
    def omim(self):
        """Gets the omim of this MouseGene.

        Description not available  # noqa: E501

        :return: The omim of this MouseGene.
        :rtype: List[int]
        """
        return self._omim

    @omim.setter
    def omim(self, omim):
        """Sets the omim of this MouseGene.

        Description not available  # noqa: E501

        :param omim: The omim of this MouseGene.
        :type omim: List[int]
        """

        self._omim = omim

    @property
    def refseqmrna(self):
        """Gets the refseqmrna of this MouseGene.

        Description not available  # noqa: E501

        :return: The refseqmrna of this MouseGene.
        :rtype: List[str]
        """
        return self._refseqmrna

    @refseqmrna.setter
    def refseqmrna(self, refseqmrna):
        """Sets the refseqmrna of this MouseGene.

        Description not available  # noqa: E501

        :param refseqmrna: The refseqmrna of this MouseGene.
        :type refseqmrna: List[str]
        """

        self._refseqmrna = refseqmrna

    @property
    def hgncid(self):
        """Gets the hgncid of this MouseGene.

        Description not available  # noqa: E501

        :return: The hgncid of this MouseGene.
        :rtype: List[str]
        """
        return self._hgncid

    @hgncid.setter
    def hgncid(self, hgncid):
        """Sets the hgncid of this MouseGene.

        Description not available  # noqa: E501

        :param hgncid: The hgncid of this MouseGene.
        :type hgncid: List[str]
        """

        self._hgncid = hgncid

    @property
    def mgiid(self):
        """Gets the mgiid of this MouseGene.

        Mouse Genomic Informatics ID  # noqa: E501

        :return: The mgiid of this MouseGene.
        :rtype: List[str]
        """
        return self._mgiid

    @mgiid.setter
    def mgiid(self, mgiid):
        """Sets the mgiid of this MouseGene.

        Mouse Genomic Informatics ID  # noqa: E501

        :param mgiid: The mgiid of this MouseGene.
        :type mgiid: List[str]
        """

        self._mgiid = mgiid

    @property
    def ec_number(self):
        """Gets the ec_number of this MouseGene.

        Description not available  # noqa: E501

        :return: The ec_number of this MouseGene.
        :rtype: List[str]
        """
        return self._ec_number

    @ec_number.setter
    def ec_number(self, ec_number):
        """Sets the ec_number of this MouseGene.

        Description not available  # noqa: E501

        :param ec_number: The ec_number of this MouseGene.
        :type ec_number: List[str]
        """

        self._ec_number = ec_number

    @property
    def orthologous_gene(self):
        """Gets the orthologous_gene of this MouseGene.

        Description not available  # noqa: E501

        :return: The orthologous_gene of this MouseGene.
        :rtype: List[object]
        """
        return self._orthologous_gene

    @orthologous_gene.setter
    def orthologous_gene(self, orthologous_gene):
        """Sets the orthologous_gene of this MouseGene.

        Description not available  # noqa: E501

        :param orthologous_gene: The orthologous_gene of this MouseGene.
        :type orthologous_gene: List[object]
        """

        self._orthologous_gene = orthologous_gene

    @property
    def id(self):
        """Gets the id of this MouseGene.

        identifier  # noqa: E501

        :return: The id of this MouseGene.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MouseGene.

        identifier  # noqa: E501

        :param id: The id of this MouseGene.
        :type id: str
        """

        self._id = id

    @property
    def uniprot(self):
        """Gets the uniprot of this MouseGene.

        Description not available  # noqa: E501

        :return: The uniprot of this MouseGene.
        :rtype: List[str]
        """
        return self._uniprot

    @uniprot.setter
    def uniprot(self, uniprot):
        """Sets the uniprot of this MouseGene.

        Description not available  # noqa: E501

        :param uniprot: The uniprot of this MouseGene.
        :type uniprot: List[str]
        """

        self._uniprot = uniprot
