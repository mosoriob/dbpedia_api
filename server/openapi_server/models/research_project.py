# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ResearchProject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_reference_id=None, project_end_date=None, project_objective=None, project_type=None, description=None, label=None, type=None, funded_by=None, project_coordinator=None, project_keyword=None, project_budget_total=None, project_start_date=None, project_participant=None, project_budget_funding=None, developer=None, id=None):  # noqa: E501
        """ResearchProject - a model defined in OpenAPI

        :param project_reference_id: The project_reference_id of this ResearchProject.  # noqa: E501
        :type project_reference_id: List[str]
        :param project_end_date: The project_end_date of this ResearchProject.  # noqa: E501
        :type project_end_date: List[str]
        :param project_objective: The project_objective of this ResearchProject.  # noqa: E501
        :type project_objective: List[str]
        :param project_type: The project_type of this ResearchProject.  # noqa: E501
        :type project_type: List[str]
        :param description: The description of this ResearchProject.  # noqa: E501
        :type description: List[str]
        :param label: The label of this ResearchProject.  # noqa: E501
        :type label: List[str]
        :param type: The type of this ResearchProject.  # noqa: E501
        :type type: List[str]
        :param funded_by: The funded_by of this ResearchProject.  # noqa: E501
        :type funded_by: List[object]
        :param project_coordinator: The project_coordinator of this ResearchProject.  # noqa: E501
        :type project_coordinator: List[object]
        :param project_keyword: The project_keyword of this ResearchProject.  # noqa: E501
        :type project_keyword: List[str]
        :param project_budget_total: The project_budget_total of this ResearchProject.  # noqa: E501
        :type project_budget_total: List[float]
        :param project_start_date: The project_start_date of this ResearchProject.  # noqa: E501
        :type project_start_date: List[str]
        :param project_participant: The project_participant of this ResearchProject.  # noqa: E501
        :type project_participant: List[object]
        :param project_budget_funding: The project_budget_funding of this ResearchProject.  # noqa: E501
        :type project_budget_funding: List[float]
        :param developer: The developer of this ResearchProject.  # noqa: E501
        :type developer: List[object]
        :param id: The id of this ResearchProject.  # noqa: E501
        :type id: str
        """


        self.openapi_types = {
            'project_reference_id': List[str],
            'project_end_date': List[str],
            'project_objective': List[str],
            'project_type': List[str],
            'description': List[str],
            'label': List[str],
            'type': List[str],
            'funded_by': List[object],
            'project_coordinator': List[object],
            'project_keyword': List[str],
            'project_budget_total': List[float],
            'project_start_date': List[str],
            'project_participant': List[object],
            'project_budget_funding': List[float],
            'developer': List[object],
            'id': str
        }

        self.attribute_map = {
            'project_reference_id': 'projectReferenceID',
            'project_end_date': 'projectEndDate',
            'project_objective': 'projectObjective',
            'project_type': 'projectType',
            'description': 'description',
            'label': 'label',
            'type': 'type',
            'funded_by': 'fundedBy',
            'project_coordinator': 'projectCoordinator',
            'project_keyword': 'projectKeyword',
            'project_budget_total': 'projectBudgetTotal',
            'project_start_date': 'projectStartDate',
            'project_participant': 'projectParticipant',
            'project_budget_funding': 'projectBudgetFunding',
            'developer': 'developer',
            'id': 'id'
        }

        self._project_reference_id = project_reference_id
        self._project_end_date = project_end_date
        self._project_objective = project_objective
        self._project_type = project_type
        self._description = description
        self._label = label
        self._type = type
        self._funded_by = funded_by
        self._project_coordinator = project_coordinator
        self._project_keyword = project_keyword
        self._project_budget_total = project_budget_total
        self._project_start_date = project_start_date
        self._project_participant = project_participant
        self._project_budget_funding = project_budget_funding
        self._developer = developer
        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> 'ResearchProject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResearchProject of this ResearchProject.  # noqa: E501
        :rtype: ResearchProject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_reference_id(self):
        """Gets the project_reference_id of this ResearchProject.

        The reference identification of the project.  # noqa: E501

        :return: The project_reference_id of this ResearchProject.
        :rtype: List[str]
        """
        return self._project_reference_id

    @project_reference_id.setter
    def project_reference_id(self, project_reference_id):
        """Sets the project_reference_id of this ResearchProject.

        The reference identification of the project.  # noqa: E501

        :param project_reference_id: The project_reference_id of this ResearchProject.
        :type project_reference_id: List[str]
        """

        self._project_reference_id = project_reference_id

    @property
    def project_end_date(self):
        """Gets the project_end_date of this ResearchProject.

        The end date of the project.  # noqa: E501

        :return: The project_end_date of this ResearchProject.
        :rtype: List[str]
        """
        return self._project_end_date

    @project_end_date.setter
    def project_end_date(self, project_end_date):
        """Sets the project_end_date of this ResearchProject.

        The end date of the project.  # noqa: E501

        :param project_end_date: The project_end_date of this ResearchProject.
        :type project_end_date: List[str]
        """

        self._project_end_date = project_end_date

    @property
    def project_objective(self):
        """Gets the project_objective of this ResearchProject.

        A defined objective of the project.  # noqa: E501

        :return: The project_objective of this ResearchProject.
        :rtype: List[str]
        """
        return self._project_objective

    @project_objective.setter
    def project_objective(self, project_objective):
        """Sets the project_objective of this ResearchProject.

        A defined objective of the project.  # noqa: E501

        :param project_objective: The project_objective of this ResearchProject.
        :type project_objective: List[str]
        """

        self._project_objective = project_objective

    @property
    def project_type(self):
        """Gets the project_type of this ResearchProject.

        The type of the research project. Mostly used for the funding schemes of the European Union, for instance: Specific Targeted Research Projects (STREP), Network of Excellence (NoE) or Integrated Project.  # noqa: E501

        :return: The project_type of this ResearchProject.
        :rtype: List[str]
        """
        return self._project_type

    @project_type.setter
    def project_type(self, project_type):
        """Sets the project_type of this ResearchProject.

        The type of the research project. Mostly used for the funding schemes of the European Union, for instance: Specific Targeted Research Projects (STREP), Network of Excellence (NoE) or Integrated Project.  # noqa: E501

        :param project_type: The project_type of this ResearchProject.
        :type project_type: List[str]
        """

        self._project_type = project_type

    @property
    def description(self):
        """Gets the description of this ResearchProject.

        small description  # noqa: E501

        :return: The description of this ResearchProject.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ResearchProject.

        small description  # noqa: E501

        :param description: The description of this ResearchProject.
        :type description: List[str]
        """

        self._description = description

    @property
    def label(self):
        """Gets the label of this ResearchProject.

        short description of the resource  # noqa: E501

        :return: The label of this ResearchProject.
        :rtype: List[str]
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this ResearchProject.

        short description of the resource  # noqa: E501

        :param label: The label of this ResearchProject.
        :type label: List[str]
        """

        self._label = label

    @property
    def type(self):
        """Gets the type of this ResearchProject.

        type of the resource  # noqa: E501

        :return: The type of this ResearchProject.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ResearchProject.

        type of the resource  # noqa: E501

        :param type: The type of this ResearchProject.
        :type type: List[str]
        """

        self._type = type

    @property
    def funded_by(self):
        """Gets the funded_by of this ResearchProject.

        A organisation financing the research project.  # noqa: E501

        :return: The funded_by of this ResearchProject.
        :rtype: List[object]
        """
        return self._funded_by

    @funded_by.setter
    def funded_by(self, funded_by):
        """Sets the funded_by of this ResearchProject.

        A organisation financing the research project.  # noqa: E501

        :param funded_by: The funded_by of this ResearchProject.
        :type funded_by: List[object]
        """

        self._funded_by = funded_by

    @property
    def project_coordinator(self):
        """Gets the project_coordinator of this ResearchProject.

        The coordinating organisation of the project.  # noqa: E501

        :return: The project_coordinator of this ResearchProject.
        :rtype: List[object]
        """
        return self._project_coordinator

    @project_coordinator.setter
    def project_coordinator(self, project_coordinator):
        """Sets the project_coordinator of this ResearchProject.

        The coordinating organisation of the project.  # noqa: E501

        :param project_coordinator: The project_coordinator of this ResearchProject.
        :type project_coordinator: List[object]
        """

        self._project_coordinator = project_coordinator

    @property
    def project_keyword(self):
        """Gets the project_keyword of this ResearchProject.

        A key word of the project.  # noqa: E501

        :return: The project_keyword of this ResearchProject.
        :rtype: List[str]
        """
        return self._project_keyword

    @project_keyword.setter
    def project_keyword(self, project_keyword):
        """Sets the project_keyword of this ResearchProject.

        A key word of the project.  # noqa: E501

        :param project_keyword: The project_keyword of this ResearchProject.
        :type project_keyword: List[str]
        """

        self._project_keyword = project_keyword

    @property
    def project_budget_total(self):
        """Gets the project_budget_total of this ResearchProject.

        The total budget of the research project.  # noqa: E501

        :return: The project_budget_total of this ResearchProject.
        :rtype: List[float]
        """
        return self._project_budget_total

    @project_budget_total.setter
    def project_budget_total(self, project_budget_total):
        """Sets the project_budget_total of this ResearchProject.

        The total budget of the research project.  # noqa: E501

        :param project_budget_total: The project_budget_total of this ResearchProject.
        :type project_budget_total: List[float]
        """

        self._project_budget_total = project_budget_total

    @property
    def project_start_date(self):
        """Gets the project_start_date of this ResearchProject.

        The start date of the project.  # noqa: E501

        :return: The project_start_date of this ResearchProject.
        :rtype: List[str]
        """
        return self._project_start_date

    @project_start_date.setter
    def project_start_date(self, project_start_date):
        """Sets the project_start_date of this ResearchProject.

        The start date of the project.  # noqa: E501

        :param project_start_date: The project_start_date of this ResearchProject.
        :type project_start_date: List[str]
        """

        self._project_start_date = project_start_date

    @property
    def project_participant(self):
        """Gets the project_participant of this ResearchProject.

        A participating organisation of the project.  # noqa: E501

        :return: The project_participant of this ResearchProject.
        :rtype: List[object]
        """
        return self._project_participant

    @project_participant.setter
    def project_participant(self, project_participant):
        """Sets the project_participant of this ResearchProject.

        A participating organisation of the project.  # noqa: E501

        :param project_participant: The project_participant of this ResearchProject.
        :type project_participant: List[object]
        """

        self._project_participant = project_participant

    @property
    def project_budget_funding(self):
        """Gets the project_budget_funding of this ResearchProject.

        The part of the project budget that is funded by the Organistaions given in the \"FundedBy\" property.  # noqa: E501

        :return: The project_budget_funding of this ResearchProject.
        :rtype: List[float]
        """
        return self._project_budget_funding

    @project_budget_funding.setter
    def project_budget_funding(self, project_budget_funding):
        """Sets the project_budget_funding of this ResearchProject.

        The part of the project budget that is funded by the Organistaions given in the \"FundedBy\" property.  # noqa: E501

        :param project_budget_funding: The project_budget_funding of this ResearchProject.
        :type project_budget_funding: List[float]
        """

        self._project_budget_funding = project_budget_funding

    @property
    def developer(self):
        """Gets the developer of this ResearchProject.

        Description not available  # noqa: E501

        :return: The developer of this ResearchProject.
        :rtype: List[object]
        """
        return self._developer

    @developer.setter
    def developer(self, developer):
        """Sets the developer of this ResearchProject.

        Description not available  # noqa: E501

        :param developer: The developer of this ResearchProject.
        :type developer: List[object]
        """

        self._developer = developer

    @property
    def id(self):
        """Gets the id of this ResearchProject.

        identifier  # noqa: E501

        :return: The id of this ResearchProject.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ResearchProject.

        identifier  # noqa: E501

        :param id: The id of this ResearchProject.
        :type id: str
        """

        self._id = id
